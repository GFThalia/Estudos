### GENERICS: LESSON
### Review
In this lesson we’ve covered how:

- Generics help us make generic, scalable code.
- The diamond operator (<>) is used to define generic classes, interfaces, or methods.
- Generics provide compile-time type safety and bug detection as opposed to raw types.
- We can create multiple bound generic classes, interfaces, and methods.
- Wildcards are used to define unknown types.
- To Add upper bounds to type parameters and wildcards.
- To Add lower bounds to wildcards.

### COLLECTIONS: LESSON
### Review
 In this lesson we’ve covered:

- The collection framework hierarchy and its core interfaces.
- The root Collection interface of the hierarchy.
- The List interface and its ArrayList and LinkedList implementations.
- The Set interface and its HashSet, LinkedHashSet, and TreeSet implementations.
- The Queue interface and its LinkedList and PriorityQueue implementations.
- The Deque interface and its LinkedList and ArrayDeque implementations.
- The Map interface and its HashMap, LinkedHashMap, and TreeMap implementations.
- The Collections utility algorithm static methods like sort(), binarySearch(), max(), min(), and reverse().
- Collection stream pipelines and aggregate operations with lambdas.