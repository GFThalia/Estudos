### **Review**

In this lesson, we learned these concepts regarding arrays:

- Arrays are lists that store data in JavaScript.
- Arrays are created with brackets `[]`.
- Each item inside of an array is at a numbered position, or index, starting at `0`.
- We can access one item in an array using its index, with syntax like: `myArray[0]`.
- We can also change an item in an array using its index, with syntax like `myArray[0] = 'new string'`;
- Arrays have a `length` property, which allows you to see how many items are in an array.
- Arrays have their own [methods](https://www.codecademy.com/resources/docs/javascript/methods), including [`.push()`](https://www.codecademy.com/resources/docs/javascript/arrays/push) and [`.pop()`](https://www.codecademy.com/resources/docs/javascript/arrays/pop), which add and remove items from an array, respectively.
- Arrays have many methods that perform different tasks, such as `.slice()` and [`.shift()`](https://www.codecademy.com/resources/docs/javascript/arrays/shift), you can find documentation at the [Mozilla Developer Network](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array) website.
- Some built-in methods are mutating, meaning the method will change the array, while others are not mutating. You can always check the documentation.
- [Variables](https://www.codecademy.com/resources/docs/javascript/variables) that contain arrays can be declared with `let` or `const`. Even when declared with `const`, arrays are still mutable. However, a variable declared with `const` cannot be reassigned.
- Arrays mutated inside of a function will keep that change even outside the function.
- Arrays can be nested inside other arrays.
- To access elements in nested arrays chain indices using bracket notation.